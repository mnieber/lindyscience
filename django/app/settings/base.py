"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 1.10.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""
from __future__ import absolute_import, unicode_literals

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import sys
from ._utils import file_contents


def gettext(x):
    return x


# E.g.
PROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = os.path.dirname(PROJECT_DIR)
SRV_DIR = '/srv/linsci'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# Application definition

INSTALLED_APPS = [
    'app.apps.MainAppConfig',
    'moves.apps.MovesConfig',
    'votes.apps.VotesConfig',
    'accounts.apps.AccountsConfig',
    'tagulous',
    'django_extensions',
    'webpack_loader',
    'rest_framework',
    'rest_framework.authtoken',
    'djoser',
    'graphene_django',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.admin',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'django.contrib.staticfiles',
    'django.contrib.messages',
]

MIDDLEWARE = [
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'app.middleware.token_auth.TokenAuthenticationMiddleware',
    'app.middleware.request_logging.request_logging_middleware'
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(PROJECT_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.csrf',
                'django.template.context_processors.tz',
                'django.template.context_processors.static',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            # 'string_if_invalid': 'DEBUG WARNING: undefined template variable [%s] not found'
            # 'loaders': [
            #     'django.template.loaders.filesystem.Loader',
            # 'django.template.loaders.app_directories.Loader',
            # 'django.template.loaders.eggs.Loader'
            # ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'wagtail',

        # The following settings are not used with sqlite3:
        'USER': 'wagtail',
        'PASSWORD': 'oom3eedieti4',
        'HOST':
        'localhost',  # Empty for localhost through domain sockets or '127.0.0.1' for localhost through TCP.
        'PORT': '',  # Set to empty string for default.
    },
    'sqlite': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(SRV_DIR, 'media/db.sqlite3')
    }
}

AUTH_USER_MODEL = 'accounts.User'

# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = False

USE_L10N = False

USE_TZ = True

SITE_ID = 1

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

STATICFILES_DIRS = [
    os.path.join(PROJECT_DIR, 'static'),
]

STATIC_ROOT = os.path.join(SRV_DIR, 'static')
STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(SRV_DIR, 'media')
MEDIA_URL = '/media/'

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': 'unix:/tmp/memcached.sock',
    }
}

WEBPACK_LOADER = {
    'DEFAULT': {
        'BUNDLE_DIR_NAME': 'bundles/',
        'STATS_FILE': os.path.join(STATIC_ROOT, 'bundles/webpack-stats.json'),
    }
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES':
    ('rest_framework.authentication.TokenAuthentication', ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    )
}

GRAPHENE = {
    'SCHEMA': 'app.schema.schema'  # Where your Graphene schema lives
}

LOGGING = {
    "version": 1,
    "handlers": {
        "file": {
            "level": "DEBUG",
            "class": "logging.FileHandler",
            'formatter': 'simple',
            "filename": "/srv/linsci/log/django-file.log",
        },
        "mail_admins": {
            "level": "ERROR",
            "class": "django.utils.log.AdminEmailHandler",
            "include_html": True,
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'stream': sys.stdout
        }
    },
    "loggers": {
        "django": {
            "handlers": ["file", "mail_admins", "console"],
            "level": "INFO",
            "propagate": False,
        }
    },
    'formatters': {
        'simple': {
            'format': '%(asctime)s api b2bapp: %(message)s',
            'datefmt': '%Y-%m-%dT%H:%M:%S',
        },
    }
}

DUMP_DB_SERVERNAME = file_contents(os.path.join(SRV_DIR, 'servername.txt'))
DUMP_DB_GIT_SHA = file_contents(os.path.join(SRV_DIR, 'deployed_version.txt'))
DUMP_DB_DIR = os.path.join(SRV_DIR, 'dumps')

DJOSER = {
    'ACTIVATION_URL': 'register/activate/{uid}/{token}',
    'EMAIL': {
        'activation': 'accounts.email.ActivationEmail',
        'password_reset': 'accounts.email.PasswordResetEmail',
        'confirmation': 'accounts.email.ConfirmationEmail',
    },
    'PASSWORD_RESET_CONFIRM_URL': 'sign-in/reset-password/{uid}/{token}',
    'PASSWORD_RESET_CONFIRM_RETYPE': False,
    'SEND_ACTIVATION_EMAIL': True,
    'SEND_CONFIRMATION_EMAIL': True,
    'SERIALIZERS': {
        'user_create': 'accounts.serializers.UserCreateSerializer',
        'current_user': 'accounts.serializers.CurrentUserSerializer',
    }
}

DOMAIN = 'www.lindyscience.org'
